ServerResponse {
    _events: [Object: null prototype
    ] { finish: [Function: bound resOnFinish
        ]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: <ref *1> Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0
            },
        length: 0,
        pipes: [],
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        errorEmitted: false,
        emitClose: false,
        autoDestroy: false,
        destroyed: false,
        errored: null,
        closed: false,
        closeEmitted: false,
        defaultEncoding: 'utf8',
        awaitDrainWriters: null,
        multiAwaitDrain: false,
        readingMore: false,
        dataEmitted: false,
        decoder: null,
        encoding: null,
            [Symbol(kPaused)
            ]: false
        },
      _events: [Object: null prototype
        ] {
        end: [Array
            ],
        timeout: [Function: socketOnTimeout
            ],
        data: [Function: bound socketOnData
            ],
        error: [Function: socketOnError
            ],
        close: [Array
            ],
        drain: [Function: bound socketOnDrain
            ],
        resume: [Function: onSocketResume
            ],
        pause: [Function: onSocketPause
            ]
        },
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite
            ],
        writecb: null,
        writelen: 0,
        afterWriteTickInfo: null,
        buffered: [],
        bufferedIndex: 0,
        allBuffers: true,
        allNoop: true,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        emitClose: false,
        autoDestroy: false,
        errored: null,
        closed: false,
        closeEmitted: false
        },
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: Server {
        maxHeaderSize: undefined,
        insecureHTTPParser: undefined,
        _events: [Object: null prototype
            ],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [TCP
            ],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 0,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        headersTimeout: 60000,
        requestTimeout: 0,
        _connectionKey: '6: : : : 3000',
            [Symbol(IncomingMessage)
            ]: [Function: IncomingMessage
            ],
            [Symbol(ServerResponse)
            ]: [Function: ServerResponse
            ],
            [Symbol(kCapture)
            ]: false,
            [Symbol(async_id_symbol)
            ]: 7158
        },
      _server: Server {
        maxHeaderSize: undefined,
        insecureHTTPParser: undefined,
        _events: [Object: null prototype
            ],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [TCP
            ],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 0,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        headersTimeout: 60000,
        requestTimeout: 0,
        _connectionKey: '6: : : : 3000',
            [Symbol(IncomingMessage)
            ]: [Function: IncomingMessage
            ],
            [Symbol(ServerResponse)
            ]: [Function: ServerResponse
            ],
            [Symbol(kCapture)
            ]: false,
            [Symbol(async_id_symbol)
            ]: 7158
        },
      parser: HTTPParser {
        '0': [Function: bound setRequestTimeout
            ],
        '1': [Function: parserOnHeaders
            ],
        '2': [Function: parserOnHeadersComplete
            ],
        '3': [Function: parserOnBody
            ],
        '4': [Function: parserOnMessageComplete
            ],
        '5': [Function: bound onParserExecute
            ],
        '6': [Function: bound onParserTimeout
            ],
        _headers: [],
        _url: '',
        socket: [Circular *1
            ],
        incoming: [IncomingMessage
            ],
        outgoing: null,
        maxHeaderPairs: 2000,
        _consumed: true,
        onIncoming: [Function: bound parserOnIncoming
            ],
            [Symbol(resource_symbol)
            ]: [HTTPServerAsyncResource
            ]
        },
      on: [Function: socketListenerWrap
        ],
      addListener: [Function: socketListenerWrap
        ],
      prependListener: [Function: socketListenerWrap
        ],
      _paused: false,
      _httpMessage: [Circular *2
        ],
      timeout: 0,
        [Symbol(async_id_symbol)
        ]: 228777,
        [Symbol(kHandle)
        ]: TCP {
        reading: true,
        onconnection: null,
        _consumed: true,
            [Symbol(owner_symbol)
            ]: [Circular *1
            ]
        },
        [Symbol(kSetNoDelay)
        ]: false,
        [Symbol(lastWriteQueueSize)
        ]: 0,
        [Symbol(timeout)
        ]: Timeout {
        _idleTimeout: -1,
        _idlePrev: null,
        _idleNext: null,
        _idleStart: 3135060,
        _onTimeout: null,
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: true,
            [Symbol(refed)
            ]: false,
            [Symbol(kHasPrimitive)
            ]: false,
            [Symbol(asyncId)
            ]: 228927,
            [Symbol(triggerId)
            ]: 228923
        },
        [Symbol(kBuffer)
        ]: null,
        [Symbol(kBufferCb)
        ]: null,
        [Symbol(kBufferGen)
        ]: null,
        [Symbol(kCapture)
        ]: false,
        [Symbol(kBytesRead)
        ]: 0,
        [Symbol(kBytesWritten)
        ]: 0,
        [Symbol(RequestTimeout)
        ]: undefined
    },
    _header: null,
    _keepAliveTimeout: 5000,
    _onPendingData: [Function: bound updateOutgoingData
    ],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0
            },
        length: 0,
        pipes: [],
        flowing: null,
        ended: true,
        endEmitted: false,
        reading: false,
        sync: true,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        errorEmitted: false,
        emitClose: true,
        autoDestroy: false,
        destroyed: false,
        errored: null,
        closed: false,
        closeEmitted: false,
        defaultEncoding: 'utf8',
        awaitDrainWriters: null,
        multiAwaitDrain: false,
        readingMore: true,
        dataEmitted: false,
        decoder: null,
        encoding: null,
            [Symbol(kPaused)
            ]: null
        },
      _events: [Object: null prototype
        ] { end: [Function: clearRequestTimeout
            ]
        },
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: <ref *1> Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: null,
        _readableState: [ReadableState
            ],
        _events: [Object: null prototype
            ],
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: [WritableState
            ],
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Server
            ],
        _server: [Server
            ],
        parser: [HTTPParser
            ],
        on: [Function: socketListenerWrap
            ],
        addListener: [Function: socketListenerWrap
            ],
        prependListener: [Function: socketListenerWrap
            ],
        _paused: false,
        _httpMessage: [Circular *2
            ],
        timeout: 0,
            [Symbol(async_id_symbol)
            ]: 228777,
            [Symbol(kHandle)
            ]: [TCP
            ],
            [Symbol(kSetNoDelay)
            ]: false,
            [Symbol(lastWriteQueueSize)
            ]: 0,
            [Symbol(timeout)
            ]: Timeout {
          _idleTimeout: -1,
          _idlePrev: null,
          _idleNext: null,
          _idleStart: 3135060,
          _onTimeout: null,
          _timerArgs: undefined,
          _repeat: null,
          _destroyed: true,
                [Symbol(refed)
                ]: false,
                [Symbol(kHasPrimitive)
                ]: false,
                [Symbol(asyncId)
                ]: 228927,
                [Symbol(triggerId)
                ]: 228923
            },
            [Symbol(kBuffer)
            ]: null,
            [Symbol(kBufferCb)
            ]: null,
            [Symbol(kBufferGen)
            ]: null,
            [Symbol(kCapture)
            ]: false,
            [Symbol(kBytesRead)
            ]: 0,
            [Symbol(kBytesWritten)
            ]: 0,
            [Symbol(RequestTimeout)
            ]: undefined
        },
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: {
        host: 'localhost: 3000',
        connection: 'keep-alive',
        'cache-control': 'max-age=0',
        'sec-ch-ua': '" Not A;Brand";v="99",
            "Chromium";v="96",
            "Google Chrome";v="96"',
        'sec-ch-ua-mobile': '?0',
        'sec-ch-ua-platform': '"Windows"',
        'upgrade-insecure-requests': '1',
        'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.110 Safari/537.36', 
        accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,* /*;q=0.8,application/signed-exchange;v=b3;q=0.9',
        'sec-fetch-site': 'same-origin',
        'sec-fetch-mode': 'navigate',
        'sec-fetch-dest': 'document',
        referer: 'http://localhost:3000/admin',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7',
        cookie: 'connect.sid=s%3AZoz-xmeHH9NgN_RnZGPOPmPSc-FlrKgm.VYcdYfTjYTas41K%2FhZaJh4Rb%2B1cMk1GaQgmzNkfVqtM'
      },
      rawHeaders: [
        'Host',
        'localhost:3000',
        'Connection',
        'keep-alive',
        'Cache-Control',
        'max-age=0',
        'sec-ch-ua',
        '" Not A;Brand";v="99", "Chromium";v="96", "Google Chrome";v="96"',
        'sec-ch-ua-mobile',
        '?0',
        'sec-ch-ua-platform',
        '"Windows"',
        'Upgrade-Insecure-Requests',
        '1',
        'User-Agent',
        'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.110 Safari/537.36',
        'Accept',
        'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',
        'Sec-Fetch-Site',
        'same-origin',
        'Sec-Fetch-Mode',
        'navigate',
        'Sec-Fetch-Dest',
        'document',
        'Referer',
        'http: //localhost:3000/admin',
        'Accept-Encoding',
        'gzip, deflate, br',
        'Accept-Language',
        'ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7',
        'Cookie',
        'connect.sid=s%3AZoz-xmeHH9NgN_RnZGPOPmPSc-FlrKgm.VYcdYfTjYTas41K%2FhZaJh4Rb%2B1cMk1GaQgmzNkfVqtM'
        ],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/admin',
      method: 'GET',
      statusCode: null,
      statusMessage: null,
      client: <ref *1> Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: null,
        _readableState: [ReadableState
            ],
        _events: [Object: null prototype
            ],
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: [WritableState
            ],
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Server
            ],
        _server: [Server
            ],
        parser: [HTTPParser
            ],
        on: [Function: socketListenerWrap
            ],
        addListener: [Function: socketListenerWrap
            ],
        prependListener: [Function: socketListenerWrap
            ],
        _paused: false,
        _httpMessage: [Circular *2
            ],
        timeout: 0,
            [Symbol(async_id_symbol)
            ]: 228777,
            [Symbol(kHandle)
            ]: [TCP
            ],
            [Symbol(kSetNoDelay)
            ]: false,
            [Symbol(lastWriteQueueSize)
            ]: 0,
            [Symbol(timeout)
            ]: Timeout {
          _idleTimeout: -1,
          _idlePrev: null,
          _idleNext: null,
          _idleStart: 3135060,
          _onTimeout: null,
          _timerArgs: undefined,
          _repeat: null,
          _destroyed: true,
                [Symbol(refed)
                ]: false,
                [Symbol(kHasPrimitive)
                ]: false,
                [Symbol(asyncId)
                ]: 228927,
                [Symbol(triggerId)
                ]: 228923
            },
            [Symbol(kBuffer)
            ]: null,
            [Symbol(kBufferCb)
            ]: null,
            [Symbol(kBufferGen)
            ]: null,
            [Symbol(kCapture)
            ]: false,
            [Symbol(kBytesRead)
            ]: 0,
            [Symbol(kBytesWritten)
            ]: 0,
            [Symbol(RequestTimeout)
            ]: undefined
        },
      _consuming: false,
      _dumped: false,
      next: [Function: next
        ],
      baseUrl: '',
      originalUrl: '/admin',
      _parsedUrl: Url {
        protocol: null,
        slashes: null,
        auth: null,
        host: null,
        port: null,
        hostname: null,
        hash: null,
        search: null,
        query: null,
        pathname: '/admin',
        path: '/admin',
        href: '/admin',
        _raw: '/admin'
        },
      params: { '0': '/admin'
        },
      query: {},
      res: [Circular *2
        ],
      _parsedOriginalUrl: Url {
        protocol: null,
        slashes: null,
        auth: null,
        host: null,
        port: null,
        hostname: null,
        hash: null,
        search: null,
        query: null,
        pathname: '/admin',
        path: '/admin',
        href: '/admin',
        _raw: '/admin'
        },
      body: {},
      sessionStore: Store {
        _emitter: [EventEmitter
            ],
        _errorHandler: [Function: bound handleError
            ],
        client: [MongoClient
            ],
        db: [Db
            ],
        _events: [Object: null prototype
            ] {},
        _eventsCount: 0,
        _maxListeners: undefined,
        options: [OptionsType
            ],
        generate: [Function (anonymous)
            ],
            [Symbol(kCapture)
            ]: false
        },
      sessionID: 'Zoz-xmeHH9NgN_RnZGPOPmPSc-FlrKgm',
      session: Session {
        cookie: [Object
            ],
        csrfSecret: 'n0W_5ACxWYocCk89NClD47YI'
        },
      csrfToken: [Function: csrfToken
        ],
      route: Route { path: '*', stack: [Array
            ], methods: [Object
            ]
        },
      cookies: [Getter/Setter
        ],
      __NEXT_INIT_QUERY: {},
      __nextHadTrailingSlash: undefined,
        [Symbol(kCapture)
        ]: false,
        [Symbol(RequestTimeout)
        ]: undefined
    },
    locals: [Object: null prototype
    ] {
      isAcc: undefined,
      isAdm: undefined,
      csrf: 'QRgDLz2g-5gfF1_QhgxxSSrZ0zQlV21k1JDM'
    },
    writeHead: [Function: writeHead
    ],
    end: [Function: end
    ],
    statusCode: 200,
    flush: [Function: flush
    ],
    write: [Function: write
    ],
    on: [Function: on
    ],
    [Symbol(kCapture)
    ]: false,
    [Symbol(kNeedDrain)
    ]: false,
    [Symbol(corked)
    ]: 0,
    [Symbol(kOutHeaders)
    ]: [Object: null prototype
    ] {
      'x-powered-by': [ 'X-Powered-By', 'Express'
        ]
    }
}
  event - build page: /login
  wait  - compiling...
  event - compiled successfully
  ssp
  <ref *2> ServerResponse {
    _events: [Object: null prototype
    ] { finish: [Function: bound resOnFinish
        ]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: <ref *1> Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0
            },
        length: 0,
        pipes: [],
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        errorEmitted: false,
        emitClose: false,
        autoDestroy: false,
        destroyed: false,
        errored: null,
        closed: false,
        closeEmitted: false,
        defaultEncoding: 'utf8',
        awaitDrainWriters: null,
        multiAwaitDrain: false,
        readingMore: false,
        dataEmitted: false,
        decoder: null,
        encoding: null,
            [Symbol(kPaused)
            ]: false
        },
      _events: [Object: null prototype
        ] {
        end: [Array
            ],
        timeout: [Function: socketOnTimeout
            ],
        data: [Function: bound socketOnData
            ],
        error: [Function: socketOnError
            ],
        close: [Array
            ],
        drain: [Function: bound socketOnDrain
            ],
        resume: [Function: onSocketResume
            ],
        pause: [Function: onSocketPause
            ]
        },
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite
            ],
        writecb: null,
        writelen: 0,
        afterWriteTickInfo: null,
        buffered: [],
        bufferedIndex: 0,
        allBuffers: true,
        allNoop: true,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        emitClose: false,
        autoDestroy: false,
        errored: null,
        closed: false,
        closeEmitted: false
        },
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: Server {
        maxHeaderSize: undefined,
        insecureHTTPParser: undefined,
        _events: [Object: null prototype
            ],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [TCP
            ],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 0,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        headersTimeout: 60000,
        requestTimeout: 0,
        _connectionKey: '6: : : : 3000',
            [Symbol(IncomingMessage)
            ]: [Function: IncomingMessage
            ],
            [Symbol(ServerResponse)
            ]: [Function: ServerResponse
            ],
            [Symbol(kCapture)
            ]: false,
            [Symbol(async_id_symbol)
            ]: 7158
        },
      _server: Server {
        maxHeaderSize: undefined,
        insecureHTTPParser: undefined,
        _events: [Object: null prototype
            ],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [TCP
            ],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 0,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        headersTimeout: 60000,
        requestTimeout: 0,
        _connectionKey: '6: : : : 3000',
            [Symbol(IncomingMessage)
            ]: [Function: IncomingMessage
            ],
            [Symbol(ServerResponse)
            ]: [Function: ServerResponse
            ],
            [Symbol(kCapture)
            ]: false,
            [Symbol(async_id_symbol)
            ]: 7158
        },
      parser: HTTPParser {
        '0': [Function: bound setRequestTimeout
            ],
        '1': [Function: parserOnHeaders
            ],
        '2': [Function: parserOnHeadersComplete
            ],
        '3': [Function: parserOnBody
            ],
        '4': [Function: parserOnMessageComplete
            ],
        '5': [Function: bound onParserExecute
            ],
        '6': [Function: bound onParserTimeout
            ],
        _headers: [],
        _url: '',
        socket: [Circular *1
            ],
        incoming: [IncomingMessage
            ],
        outgoing: null,
        maxHeaderPairs: 2000,
        _consumed: true,
        onIncoming: [Function: bound parserOnIncoming
            ],
            [Symbol(resource_symbol)
            ]: [HTTPServerAsyncResource
            ]
        },
      on: [Function: socketListenerWrap
        ],
      addListener: [Function: socketListenerWrap
        ],
      prependListener: [Function: socketListenerWrap
        ],
      _paused: false,
      _httpMessage: [Circular *2
        ],
      timeout: 0,
        [Symbol(async_id_symbol)
        ]: 228866,
        [Symbol(kHandle)
        ]: TCP {
        reading: true,
        onconnection: null,
        _consumed: true,
            [Symbol(owner_symbol)
            ]: [Circular *1
            ]
        },
        [Symbol(kSetNoDelay)
        ]: false,
        [Symbol(lastWriteQueueSize)
        ]: 0,
        [Symbol(timeout)
        ]: Timeout {
        _idleTimeout: -1,
        _idlePrev: null,
        _idleNext: null,
        _idleStart: 3135059,
        _onTimeout: null,
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: true,
            [Symbol(refed)
            ]: false,
            [Symbol(kHasPrimitive)
            ]: false,
            [Symbol(asyncId)
            ]: 228910,
            [Symbol(triggerId)
            ]: 228907
        },
        [Symbol(kBuffer)
        ]: null,
        [Symbol(kBufferCb)
        ]: null,
        [Symbol(kBufferGen)
        ]: null,
        [Symbol(kCapture)
        ]: false,
        [Symbol(kBytesRead)
        ]: 0,
        [Symbol(kBytesWritten)
        ]: 0,
        [Symbol(RequestTimeout)
        ]: undefined
    },
    _header: null,
    _keepAliveTimeout: 5000,
    _onPendingData: [Function: bound updateOutgoingData
    ],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
      _readableState: ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0
            },
        length: 0,
        pipes: [],
        flowing: null,
        ended: true,
        endEmitted: false,
        reading: false,
        sync: true,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        errorEmitted: false,
        emitClose: true,
        autoDestroy: false,
        destroyed: false,
        errored: null,
        closed: false,
        closeEmitted: false,
        defaultEncoding: 'utf8',
        awaitDrainWriters: null,
        multiAwaitDrain: false,
        readingMore: true,
        dataEmitted: false,
        decoder: null,
        encoding: null,
            [Symbol(kPaused)
            ]: null
        },
      _events: [Object: null prototype
        ] { end: [Function: clearRequestTimeout
            ]
        },
      _eventsCount: 1,
      _maxListeners: undefined,
      socket: <ref *1> Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: null,
        _readableState: [ReadableState
            ],
        _events: [Object: null prototype
            ],
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: [WritableState
            ],
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Server
            ],
        _server: [Server
            ],
        parser: [HTTPParser
            ],
        on: [Function: socketListenerWrap
            ],
        addListener: [Function: socketListenerWrap
            ],
        prependListener: [Function: socketListenerWrap
            ],
        _paused: false,
        _httpMessage: [Circular *2
            ],
        timeout: 0,
            [Symbol(async_id_symbol)
            ]: 228866,
            [Symbol(kHandle)
            ]: [TCP
            ],
            [Symbol(kSetNoDelay)
            ]: false,
            [Symbol(lastWriteQueueSize)
            ]: 0,
            [Symbol(timeout)
            ]: Timeout {
          _idleTimeout: -1,
          _idlePrev: null,
          _idleNext: null,
          _idleStart: 3135059,
          _onTimeout: null,
          _timerArgs: undefined,
          _repeat: null,
          _destroyed: true,
                [Symbol(refed)
                ]: false,
                [Symbol(kHasPrimitive)
                ]: false,
                [Symbol(asyncId)
                ]: 228910,
                [Symbol(triggerId)
                ]: 228907
            },
            [Symbol(kBuffer)
            ]: null,
            [Symbol(kBufferCb)
            ]: null,
            [Symbol(kBufferGen)
            ]: null,
            [Symbol(kCapture)
            ]: false,
            [Symbol(kBytesRead)
            ]: 0,
            [Symbol(kBytesWritten)
            ]: 0,
            [Symbol(RequestTimeout)
            ]: undefined
        },
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      headers: {
        host: 'localhost: 3000',
        connection: 'keep-alive',
        'cache-control': 'max-age=0',
        'sec-ch-ua': '" Not A;Brand";v="99",
            "Chromium";v="96",
            "Google Chrome";v="96"',
        'sec-ch-ua-mobile': '?0',
        'sec-ch-ua-platform': '"Windows"',
        'upgrade-insecure-requests': '1',
        'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.110 Safari/537.36', 
        accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,* /*;q=0.8,application/signed-exchange;v=b3;q=0.9',
        'sec-fetch-site': 'none',
        'sec-fetch-mode': 'navigate',
        'sec-fetch-user': '?1',
        'sec-fetch-dest': 'document',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7',
        cookie: 'connect.sid=s%3AZoz-xmeHH9NgN_RnZGPOPmPSc-FlrKgm.VYcdYfTjYTas41K%2FhZaJh4Rb%2B1cMk1GaQgmzNkfVqtM'
      },
      rawHeaders: [
        'Host',
        'localhost:3000',
        'Connection',
        'keep-alive',
        'Cache-Control',
        'max-age=0',
        'sec-ch-ua',
        '" Not A;Brand";v="99", "Chromium";v="96", "Google Chrome";v="96"',
        'sec-ch-ua-mobile',
        '?0',
        'sec-ch-ua-platform',
        '"Windows"',
        'Upgrade-Insecure-Requests',
        '1',
        'User-Agent',
        'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.110 Safari/537.36',
        'Accept',
        'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',
        'Sec-Fetch-Site',
        'none',
        'Sec-Fetch-Mode',
        'navigate',
        'Sec-Fetch-User',
        '?1',
        'Sec-Fetch-Dest',
        'document',
        'Accept-Encoding',
        'gzip, deflate, br',
        'Accept-Language',
        'ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7',
        'Cookie',
        'connect.sid=s%3AZoz-xmeHH9NgN_RnZGPOPmPSc-FlrKgm.VYcdYfTjYTas41K%2FhZaJh4Rb%2B1cMk1GaQgmzNkfVqtM'
        ],
      trailers: {},
      rawTrailers: [],
      aborted: false,
      upgrade: false,
      url: '/admin',
      method: 'GET',
      statusCode: null,
      statusMessage: null,
      client: <ref *1> Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: null,
        _readableState: [ReadableState
            ],
        _events: [Object: null prototype
            ],
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: [WritableState
            ],
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Server
            ],
        _server: [Server
            ],
        parser: [HTTPParser
            ],
        on: [Function: socketListenerWrap
            ],
        addListener: [Function: socketListenerWrap
            ],
        prependListener: [Function: socketListenerWrap
            ],
        _paused: false,
        _httpMessage: [Circular *2
            ],
        timeout: 0,
            [Symbol(async_id_symbol)
            ]: 228866,
            [Symbol(kHandle)
            ]: [TCP
            ],
            [Symbol(kSetNoDelay)
            ]: false,
            [Symbol(lastWriteQueueSize)
            ]: 0,
            [Symbol(timeout)
            ]: Timeout {
          _idleTimeout: -1,
          _idlePrev: null,
          _idleNext: null,
          _idleStart: 3135059,
          _onTimeout: null,
          _timerArgs: undefined,
          _repeat: null,
          _destroyed: true,
                [Symbol(refed)
                ]: false,
                [Symbol(kHasPrimitive)
                ]: false,
                [Symbol(asyncId)
                ]: 228910,
                [Symbol(triggerId)
                ]: 228907
            },
            [Symbol(kBuffer)
            ]: null,
            [Symbol(kBufferCb)
            ]: null,
            [Symbol(kBufferGen)
            ]: null,
            [Symbol(kCapture)
            ]: false,
            [Symbol(kBytesRead)
            ]: 0,
            [Symbol(kBytesWritten)
            ]: 0,
            [Symbol(RequestTimeout)
            ]: undefined
        },
      _consuming: false,
      _dumped: false,
      next: [Function: next
        ],
      baseUrl: '',
      originalUrl: '/admin',
      _parsedUrl: Url {
        protocol: null,
        slashes: null,
        auth: null,
        host: null,
        port: null,
        hostname: null,
        hash: null,
        search: null,
        query: null,
        pathname: '/admin',
        path: '/admin',
        href: '/admin',
        _raw: '/admin'
        },
      params: { '0': '/admin'
        },
      query: {},
      res: [Circular *2
        ],
      _parsedOriginalUrl: Url {
        protocol: null,
        slashes: null,
        auth: null,
        host: null,
        port: null,
        hostname: null,
        hash: null,
        search: null,
        query: null,
        pathname: '/admin',
        path: '/admin',
        href: '/admin',
        _raw: '/admin'
        },
      body: {},
      sessionStore: Store {
        _emitter: [EventEmitter
            ],
        _errorHandler: [Function: bound handleError
            ],
        client: [MongoClient
            ],
        db: [Db
            ],
        _events: [Object: null prototype
            ] {},
        _eventsCount: 0,
        _maxListeners: undefined,
        options: [OptionsType
            ],
        generate: [Function (anonymous)
            ],
            [Symbol(kCapture)
            ]: false
        },
      sessionID: 'Zoz-xmeHH9NgN_RnZGPOPmPSc-FlrKgm',
      session: Session {
        cookie: [Object
            ],
        csrfSecret: 'n0W_5ACxWYocCk89NClD47YI'
        },
      csrfToken: [Function: csrfToken
        ],
      route: Route { path: '*', stack: [Array
            ], methods: [Object
            ]
        },
      cookies: [Getter/Setter
        ],
      __NEXT_INIT_QUERY: {},
      __nextHadTrailingSlash: undefined,
        [Symbol(kCapture)
        ]: false,
        [Symbol(RequestTimeout)
        ]: undefined
    },
    locals: [Object: null prototype
    ] {
      isAcc: undefined,
      isAdm: undefined,
      csrf: 'a2y7ITWN-ApWpcH-s7XYR8LHnhaxQ4ehTwTE'
    },
    writeHead: [Function: writeHead
    ],
    end: [Function: end
    ],
    statusCode: 200,
    flush: [Function: flush
    ],
    write: [Function: write
    ],
    on: [Function: on
    ],
    [Symbol(kCapture)
    ]: false,
    [Symbol(kNeedDrain)
    ]: false,
    [Symbol(corked)
    ]: 0,
    [Symbol(kOutHeaders)
    ]: [Object: null prototype
    ] {
      'x-powered-by': [ 'X-Powered-By', 'Express'
        ]
    }
}